{"version":3,"sources":["components/soundx.js","firebase.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["key","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","availible","intervals","candidates","Object","values","SoundX","props","state","url","playing","loop","speed","isPlaying","Sound","status","PLAYING","buttonValue","first","second","interval","score","correct","handleChange","bind","returnbuttons","value","isCorrect","this","setState","onScoreChange","console","log","floor","Math","random","length","ceiling","abs","amount","arr","r","indexOf","push","toAdd","displays","incorrect","i","toDisplay","onClick","className","intervalToDisplay","location","playStatus","playbackRate","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Main","renderWhich","username","items","handleScoreChange","handleSubmit","newScore","e","target","name","preventDefault","itemsRef","database","ref","time","Date","getTime","item","date","window","reload","itemId","remove","on","snapshot","val","newState","id","sort","gameScore","onSubmit","type","placeholder","onChange","map","returnMain","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6db6570f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Sound from 'react-sound';\r\nimport \"../css/sound.css\"\r\n\r\nconst key = {\r\n    0: \"C4\",\r\n    1: \"C4#\",\r\n    2: \"D4\",\r\n    3: \"D4#\",\r\n    4: \"E4\",\r\n    5: \"F4\",\r\n    6: \"F4#\",\r\n    7: \"G4\",\r\n    8: \"G4#\",\r\n    9: \"A4\",\r\n    10: \"A4#\",\r\n    11: \"B4\",\r\n    12: \"C5\",\r\n    13: \"C5#\",\r\n    14: \"D5\"\r\n}\r\n\r\nconst availible = [0,2,4,5,7,9,11,12,14]\r\n\r\nconst intervals ={\r\n    0: \"P1\",\r\n    1: \"m2\",\r\n    2: \"M2\",\r\n    3: \"m3\",\r\n    4: \"M3\",\r\n    5: \"P4\",\r\n    6: \"d5\",\r\n    7: \"P5\",\r\n    8: \"m6\",\r\n    9: \"M6\",\r\n    10: \"m7\",\r\n    11: \"M7\",\r\n    12: \"P8\",\r\n    13: \"m9\",\r\n    14: \"M9\",\r\n}\r\n\r\nconst options = 6;\r\n\r\nlet candidates = Object.values(intervals);\r\n\r\nclass SoundX extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          url: \"https://raw.githubusercontent.com/matthewlee626/Music/master/octavo/C4C4.mp3\",\r\n          playing: this.props.playing,\r\n          loop: this.props.loop,\r\n          speed: this.props.speed,\r\n          isPlaying: this.props.playing === Sound.status.PLAYING ? true : false,\r\n          buttonValue: this.props.isPlaying ? \"Pause\" : \"Play\",\r\n          first: 0,\r\n          second: 0,\r\n          interval: 0,\r\n          score: this.props.score,\r\n          correct: \"Start!\",\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        //this.changeInterval = this.changeInterval.bind(this);\r\n        this.returnbuttons = this.returnbuttons.bind(this);\r\n    }\r\n\r\n    handleChange(value, isCorrect) {\r\n        if(isCorrect){\r\n            this.setState({correct: \"Correct!\"})\r\n        }else{\r\n            this.setState({correct: \"Incorrect!\"})\r\n        }\r\n        this.props.onScoreChange(value);\r\n        candidates = Object.values(intervals);\r\n        console.log(\"Hello!\");\r\n        let floor = availible[Math.floor(Math.random()*availible.length)];\r\n        let ceiling = availible[Math.floor(Math.random()*availible.length)];\r\n        this.setState({\r\n            first: floor,\r\n            second: ceiling,\r\n            interval: Math.abs(floor-ceiling),\r\n            url: \"https://raw.githubusercontent.com/matthewlee626/Music/master/octavo/\" + key[floor] + key[ceiling] + \".mp3\",\r\n        })\r\n    }\r\n\r\n    returnbuttons(amount, correct){\r\n        let arr = []; // values\r\n        while(arr.length < amount){\r\n            var r = Math.floor(Math.random() * 15);\r\n            if(arr.indexOf(r) === -1) arr.push(r);\r\n        }\r\n        let toAdd = [];\r\n        let displays= [];\r\n        // if (correct !== 0) candidates.splice(this.state.interval, 1);\r\n        let incorrect = \"\";\r\n        for(let i = 0; i < amount; i++){\r\n            incorrect = arr[i];\r\n            let toDisplay = candidates[incorrect];\r\n            // candidates.splice(incorrect, 1);\r\n            displays.push(toDisplay)\r\n            toAdd.push(\r\n                <button \r\n                    onClick = {() => this.handleChange(this.props.score, false)}\r\n                    className = \"option\"\r\n                >{toDisplay}</button>\r\n            )\r\n        }\r\n        return toAdd;\r\n    }\r\n\r\n    render(){\r\n        const score = this.props.score;\r\n        const intervalToDisplay = intervals[this.state.interval];\r\n        const location = Math.floor(Math.random()*(options));\r\n        return(\r\n            <div className=\"soundcontainer\">\r\n                <div>\r\n                    <h2>\r\n                        Score: {score}\r\n                    </h2>  \r\n                </div>\r\n                <div>\r\n                    <h4>\r\n                        {this.state.correct}\r\n                    </h4>  \r\n                </div>\r\n                <div>\r\n                    {this.returnbuttons(location, intervalToDisplay)}\r\n                    <button \r\n                        onClick = {() => this.handleChange(score + 1, true)}\r\n                        className = \"option\"\r\n                    >\r\n                    {intervalToDisplay}\r\n                    </button>\r\n                    {this.returnbuttons(options-location, 0)}\r\n                </div>\r\n                <Sound\r\n                    url= {this.state.url}\r\n                    playStatus={this.state.playing}\r\n                    loop={this.state.loop}\r\n                    playbackRate={this.state.speed}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SoundX;","import firebase from 'firebase'\r\nconst config = {\r\n    apiKey: \"AIzaSyAA4JA4UBLe3Zn2mzD6ppQWGYXnvsrVZQs\",\r\n    authDomain: \"octavo-501f9.firebaseapp.com\",\r\n    databaseURL: \"https://octavo-501f9.firebaseio.com\",\r\n    projectId: \"octavo-501f9\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"438954623086\",\r\n    appId: \"1:438954623086:web:5b8acc91bf22c0efc7267f\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport \"./css/sound.css\"\r\n\r\n//import Header from './components/header.js'\r\n\r\nimport Sound from 'react-sound';\r\nimport SoundX from \"./components/soundx.js\"\r\n\r\n//import Footer from './components/footer.js';\r\n\r\nimport firebase from \"./firebase.js\"\r\n\r\nclass Main extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    //this.handleScoreChange = this.handleScoreChange.bind(this);\r\n    this.state = {\r\n      playing: Sound.status.PLAYING,\r\n      renderWhich: 0,  /* 0 for the default, 1 for about*/ \r\n      score: 0,\r\n      username: '',\r\n      items: [],\r\n    };\r\n    this.handleScoreChange = this.handleScoreChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleScoreChange(newScore){\r\n    this.setState({score: newScore});\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const itemsRef = firebase.database().ref('items');\r\n    const d = new Date();\r\n    let time = d.getTime()\r\n    const item = {\r\n      score: this.state.score,\r\n      username: this.state.username,\r\n      date: time,\r\n    }\r\n    itemsRef.push(item);\r\n    this.setState({\r\n      score: 0,\r\n      username: ''\r\n    });\r\n    window.location.reload();\r\n  }\r\n\r\n  removeItem(itemId) {\r\n    const itemRef = firebase.database().ref(`/items/${itemId}`);\r\n    itemRef.remove();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const itemsRef = firebase.database().ref('items');\r\n    itemsRef.on('value', (snapshot) => {\r\n      let items = snapshot.val();\r\n      let newState = [];\r\n      // eslint-disable-next-line\r\n      for (let item in items) {\r\n        newState.push({\r\n          id: item,\r\n          score: items[item].score,\r\n          username: items[item].username\r\n        });\r\n      }\r\n      newState.sort(function(first, second) {\r\n        return second.score - first.score;\r\n       });\r\n      this.setState({\r\n        items: newState\r\n      });\r\n    });\r\n  }\r\n\r\n  returnMain(){\r\n    const gameScore = this.state.score;\r\n\r\n    return(      \r\n      <div>\r\n        <div className='app'>\r\n          <header>\r\n              <div className='wrapper'>\r\n                <h1>Octavo</h1>\r\n              </div>\r\n          </header>\r\n          <div className='container'>\r\n            <div className='sound'>\r\n              <SoundX\r\n                  //url= {\"https://raw.githubusercontent.com/matthewlee626/listen/master/src/music/12.mp3\"}\r\n                  playing = {this.state.playing} \r\n                  loop={true} \r\n                  speed={1}\r\n                  score={gameScore}\r\n                  onScoreChange={this.handleScoreChange}\r\n              >\r\n              </SoundX>\r\n            </div>\r\n            <section className='add-item'>\r\n              <h3>Submit your score!</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <input type=\"text\" name=\"username\" placeholder=\"What's your name?\" onChange={this.handleChange} value={this.state.username} />\r\n                  <button>Add Score</button>\r\n                </form>\r\n            </section>\r\n            <section className=\"leaderboard\">\r\n              <h2>Leaderboard</h2>\r\n              <ul className='list'>\r\n                    <li key={\"header\"}>\r\n                      <h3>Name</h3>\r\n                      <h3 className=\"score\">Score</h3>\r\n                    </li>\r\n                    {this.state.items.map((item) => {\r\n                      return (\r\n                        <li key={item.id}>\r\n                          <p>{item.username === \"\" ? 'Anonymous' : item.username}</p>\r\n                          <p>{item.score}</p>\r\n                        </li>\r\n                      )\r\n                    })}\r\n              </ul>\r\n            </section>\r\n          </div>\r\n          <footer>\r\n            <div className='wrapper'>\r\n              <p>matthewlee.xyz © 2020</p>\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){      \r\n    if (this.state.renderWhich === 0){\r\n      return (\r\n        this.returnMain()\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Main from './Main.js'\r\n\r\nclass App extends React.Component{\r\n  render(){      \r\n    return (\r\n      <Main></Main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}