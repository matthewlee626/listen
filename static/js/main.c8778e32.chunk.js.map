{"version":3,"sources":["components/soundx.js","firebase.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["key","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","availible","intervals","candidates","Object","values","SoundX","props","state","url","playing","loop","speed","isPlaying","Sound","status","PLAYING","buttonValue","first","second","interval","score","correct","handleChange","bind","returnbuttons","value","isCorrect","this","setState","onScoreChange","console","log","floor","Math","random","length","ceiling","abs","amount","toAdd","splice","incorrect","i","toDisplay","push","onClick","className","intervalToDisplay","location","playStatus","playbackRate","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Main","renderWhich","username","items","handleScoreChange","handleSubmit","newScore","e","target","name","preventDefault","itemsRef","database","ref","time","Date","getTime","item","date","window","reload","itemId","remove","on","snapshot","val","newState","id","sort","gameScore","onSubmit","type","placeholder","onChange","map","returnMain","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c8778e32.chunk.js","sourcesContent":["import React from 'react';\nimport Sound from 'react-sound';\nimport \"../css/sound.css\"\n\nconst key = {\n    0: \"C4\",\n    1: \"C4#\",\n    2: \"D4\",\n    3: \"D4#\",\n    4: \"E4\",\n    5: \"F4\",\n    6: \"F4#\",\n    7: \"G4\",\n    8: \"G4#\",\n    9: \"A4\",\n    10: \"A4#\",\n    11: \"B4\",\n    12: \"C5\",\n    13: \"C5#\",\n    14: \"D5\"\n}\n\nconst availible = [0,2,4,5,7,9,11,12,14]\n\nconst intervals ={\n    0: \"P1\",\n    1: \"m2\",\n    2: \"M2\",\n    3: \"m3\",\n    4: \"M3\",\n    5: \"P4\",\n    6: \"d5\",\n    7: \"P5\",\n    8: \"m6\",\n    9: \"M6\",\n    10: \"m7\",\n    11: \"M7\",\n    12: \"P8\",\n    13: \"m9\",\n    14: \"M9\",\n}\n\nconst options = 6;\n\nlet candidates = Object.values(intervals);\n\nclass SoundX extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          url: \"https://raw.githubusercontent.com/matthewlee626/Music/master/octavo/C4C4.mp3\",\n          playing: this.props.playing,\n          loop: this.props.loop,\n          speed: this.props.speed,\n          isPlaying: this.props.playing === Sound.status.PLAYING ? true : false,\n          buttonValue: this.props.isPlaying ? \"Pause\" : \"Play\",\n          first: 0,\n          second: 0,\n          interval: 0,\n          score: this.props.score,\n          correct: \"Start!\",\n        };\n        this.handleChange = this.handleChange.bind(this);\n        //this.changeInterval = this.changeInterval.bind(this);\n        this.returnbuttons = this.returnbuttons.bind(this);\n    }\n\n    handleChange(value, isCorrect) {\n        if(isCorrect){\n            this.setState({correct: \"Correct!\"})\n        }else{\n            this.setState({correct: \"Incorrect!\"})\n        }\n        this.props.onScoreChange(value);\n        candidates = Object.values(intervals);\n        console.log(\"Hello!\");\n        let floor = availible[Math.floor(Math.random()*availible.length)];\n        let ceiling = availible[Math.floor(Math.random()*availible.length)];\n        this.setState({\n            first: floor,\n            second: ceiling,\n            interval: Math.abs(floor-ceiling),\n            url: \"https://raw.githubusercontent.com/matthewlee626/Music/master/octavo/\" + key[floor] + key[ceiling] + \".mp3\",\n        })\n    }\n\n    returnbuttons(amount, correct){\n        let toAdd = [];\n        if (correct !== 0) candidates.splice(this.state.interval, 1);\n        let incorrect = \"\";\n        for(let i = 0; i < amount; i++){\n            incorrect = Math.floor(Math.random()*candidates.length);\n            let toDisplay = candidates[incorrect];\n            candidates.splice(incorrect, 1);\n            toAdd.push(\n                <button \n                    onClick = {() => this.handleChange(this.props.score, false)}\n                    className = \"option\"\n                >{toDisplay}</button>\n            )\n        }\n        return toAdd;\n    }\n\n    render(){\n        const score = this.props.score;\n        const intervalToDisplay = intervals[this.state.interval];\n        const location = Math.floor(Math.random()*(options));\n        return(\n            <div className=\"soundcontainer\">\n                <div>\n                    <h2>\n                        Score: {score}\n                    </h2>  \n                </div>\n                <div>\n                    <h4>\n                        {this.state.correct}\n                    </h4>  \n                </div>\n                <div>\n                    {this.returnbuttons(location, intervalToDisplay)}\n                    <button \n                        onClick = {() => this.handleChange(score + 1, true)}\n                        className = \"option\"\n                    >\n                    {intervalToDisplay}\n                    </button>\n                    {this.returnbuttons(options-location, 0)}\n                </div>\n                <Sound\n                    url= {this.state.url}\n                    playStatus={this.state.playing}\n                    loop={this.state.loop}\n                    playbackRate={this.state.speed}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SoundX;","import firebase from 'firebase'\nconst config = {\n    apiKey: \"AIzaSyAA4JA4UBLe3Zn2mzD6ppQWGYXnvsrVZQs\",\n    authDomain: \"octavo-501f9.firebaseapp.com\",\n    databaseURL: \"https://octavo-501f9.firebaseio.com\",\n    projectId: \"octavo-501f9\",\n    storageBucket: \"\",\n    messagingSenderId: \"438954623086\",\n    appId: \"1:438954623086:web:5b8acc91bf22c0efc7267f\"\n};\nfirebase.initializeApp(config);\nexport default firebase;","import React from 'react';\nimport './App.css';\nimport \"./css/sound.css\"\n\n//import Header from './components/header.js'\n\nimport Sound from 'react-sound';\nimport SoundX from \"./components/soundx.js\"\n\n//import Footer from './components/footer.js';\n\nimport firebase from \"./firebase.js\"\n\nclass Main extends React.Component{\n  constructor(props) {\n    super(props);\n    //this.handleScoreChange = this.handleScoreChange.bind(this);\n    this.state = {\n      playing: Sound.status.PLAYING,\n      renderWhich: 0,  /* 0 for the default, 1 for about*/ \n      score: 0,\n      username: '',\n      items: [],\n    };\n    this.handleScoreChange = this.handleScoreChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleScoreChange(newScore){\n    this.setState({score: newScore});\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const itemsRef = firebase.database().ref('items');\n    const d = new Date();\n    let time = d.getTime()\n    const item = {\n      score: this.state.score,\n      username: this.state.username,\n      date: time,\n    }\n    itemsRef.push(item);\n    this.setState({\n      score: 0,\n      username: ''\n    });\n    window.location.reload();\n  }\n\n  removeItem(itemId) {\n    const itemRef = firebase.database().ref(`/items/${itemId}`);\n    itemRef.remove();\n  }\n\n  componentDidMount() {\n    const itemsRef = firebase.database().ref('items');\n    itemsRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      let newState = [];\n      // eslint-disable-next-line\n      for (let item in items) {\n        newState.push({\n          id: item,\n          score: items[item].score,\n          username: items[item].username\n        });\n      }\n      newState.sort(function(first, second) {\n        return second.score - first.score;\n       });\n      this.setState({\n        items: newState\n      });\n    });\n  }\n\n  returnMain(){\n    const gameScore = this.state.score;\n\n    return(      \n      <div>\n        <div className='app'>\n          <header>\n              <div className='wrapper'>\n                <h1>Octavo</h1>\n              </div>\n          </header>\n          <div className='container'>\n            <div className='sound'>\n              <SoundX\n                  //url= {\"https://raw.githubusercontent.com/matthewlee626/listen/master/src/music/12.mp3\"}\n                  playing = {this.state.playing} \n                  loop={true} \n                  speed={1}\n                  score={gameScore}\n                  onScoreChange={this.handleScoreChange}\n              >\n              </SoundX>\n            </div>\n            <section className='add-item'>\n              <h3>Submit your score!</h3>\n                <form onSubmit={this.handleSubmit}>\n                  <input type=\"text\" name=\"username\" placeholder=\"What's your name?\" onChange={this.handleChange} value={this.state.username} />\n                  <button>Add Score</button>\n                </form>\n            </section>\n            <section className=\"leaderboard\">\n              <h2>Leaderboard</h2>\n              <ul className='list'>\n                    <li key={\"header\"}>\n                      <h3>Name</h3>\n                      <h3 className=\"score\">Score</h3>\n                    </li>\n                    {this.state.items.map((item) => {\n                      return (\n                        <li key={item.id}>\n                          <p>{item.username === \"\" ? 'Anonymous' : item.username}</p>\n                          <p>{item.score}</p>\n                        </li>\n                      )\n                    })}\n              </ul>\n            </section>\n          </div>\n          <footer>\n            <div className='wrapper'>\n              <p>matthewlee.xyz © 2019</p>\n            </div>\n          </footer>\n        </div>\n      </div>\n    )\n  }\n\n  render(){      \n    if (this.state.renderWhich === 0){\n      return (\n        this.returnMain()\n      );\n    }\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport Main from './Main.js'\n\nclass App extends React.Component{\n  render(){      \n    return (\n      <Main></Main>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}